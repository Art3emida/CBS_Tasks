@model EditAuthorRequestDto

@{
    ViewData["Title"] = "Edit Author";
}

<div class="container">
    <h2>Edit Author</h2>

    <form asp-action="Edit" method="post" id="authorForm">
        <div class="mb-3 row">
            <label asp-for="LastName" class="col-sm-2 col-form-label">Last Name</label>
            <div class="col-sm-10">
                <input asp-for="LastName" class="form-control"/>
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
        </div>

        <div class="mb-3 row">
            <label asp-for="FirstName" class="col-sm-2 col-form-label">First Name</label>
            <div class="col-sm-10">
                <input asp-for="FirstName" class="form-control"/>
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
        </div>

        <div class="mb-3 row">
            <label asp-for="MiddleName" class="col-sm-2 col-form-label">Middle Name</label>
            <div class="col-sm-10">
                <input asp-for="MiddleName" class="form-control"/>
                <span asp-validation-for="MiddleName" class="text-danger"></span>
            </div>
        </div>

        <div class="mb-3 row">
            <label asp-for="BirthDate" class="col-sm-2 col-form-label">Birth Date</label>
            <div class="col-sm-10">
                <input asp-for="BirthDate" class="form-control" type="date"/>
                <span asp-validation-for="BirthDate" class="text-danger"></span>
            </div>
        </div>

        <div class="mb-3">
            <h5>Books</h5>
            <ul id="bookList" class="list-group @(Model.BooksExistDetails.Any() ? "" : "d-none")">
                @foreach (Book book in Model.BooksExistDetails)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <div>
                            <i class="bi bi-book-fill text-primary me-2"></i>
                            <span class="fw-bold">@book.Title</span>
                            <small class="text-muted">(@book.Genre, @book.TotalPages pages)</small>
                        </div>
                        <button type="button" class="btn btn-danger btn-sm" data-book-id="@book.Id" onclick="removeExistBook(this)">
                            <i class="bi bi-trash"></i> Delete
                        </button>
                    </li>
                }
            </ul>
            <li id="bookListEmpty" class="list-group-item text-center text-muted @(Model.BooksExistDetails.Any() ? "d-none" : "")">
                <i class="bi bi-book"></i> No books available
                <div class="mt-2">
                    <a href="#" class="text-primary text-decoration-none" data-bs-toggle="modal" data-bs-target="#addBookModal">
                        <i class="bi bi-plus-circle"></i> Try adding a new one
                    </a>
                </div>
            </li>
        </div>

        <div asp-validation-summary="All" class="text-danger"></div>
        
        <div class="mb-3 form-buttons">
            <a href="@Url.Action("index")" class="btn btn-secondary">
                <i class="bi bi-arrow-left-circle"></i> Back
            </a>
            <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#addBookModal">
                <i class="bi bi-plus-circle"></i> Add New Book
            </button>
            <button type="submit" class="btn btn-success">
                <i class="bi bi-save"></i> Save
            </button>
        </div>

        @foreach (Book book in Model.BooksExistDetails)
        {
            <input type="hidden" name="BooksExist[]" value="@book.Id"/>
        }
    </form>
</div>

@await Html.PartialAsync("_AddBookModalPartial", @Model.Id)

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
